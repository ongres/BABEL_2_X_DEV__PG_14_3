SET babelfishpg_tsql.sql_dialect = 'tsql';
create table t1 (a uniqueidentifier, b uniqueidentifier, c uniqueidentifier, primary key(a));
insert into t1(a) values ('6F9619FF-8B86-D011-B42D-00C04FC964FF');
insert into t1(a) values ('6F9619FF-8B86-D011-B42D-00C04FC964FF');  -- trigger error
ERROR:  duplicate key value violates unique constraint "t1_pkey"
DETAIL:  Key (a)=(6F9619FF-8B86-D011-B42D-00C04FC964FF) already exists.
select * from t1;
                  a                   | b | c 
--------------------------------------+---+---
 6F9619FF-8B86-D011-B42D-00C04FC964FF |   | 
(1 row)

insert into t1 values ('a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11', newid(), newid());
explain (costs off) select * from t1 where a = '6F9619FF-8B86-D011-B42D-00C04FC964FF'; -- test PK
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Index Scan using t1_pkey on t1
   Index Cond: (a = '6F9619FF-8B86-D011-B42D-00C04FC964FF'::uniqueidentifier)
(2 rows)

select count(*) from t1 where a = '6F9619FF-8B86-D011-B42D-00C04FC964FF';
 count 
-------
     1
(1 row)

select count(*) from t1 where a > '6F9619FF-8B86-D011-B42D-00C04FC964FF';
 count 
-------
     1
(1 row)

select count(*) from t1 where a >= '6F9619FF-8B86-D011-B42D-00C04FC964FF';
 count 
-------
     2
(1 row)

select count(*) from t1 where a < 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11';
 count 
-------
     1
(1 row)

select count(*) from t1 where a <= 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11';
 count 
-------
     2
(1 row)

select count(*) from t1 where a <> 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11';
 count 
-------
     1
(1 row)

-- newid's value could not be verified
insert into t1 values (newid(), newid(), newid());
insert into t1 values (newid(), newid(), newid());
insert into t1 values (newid(), newid(), newid());
select count(a) from t1;
 count 
-------
     5
(1 row)

create table t2 (like t1);
insert into t2 select * from t1 order by a;
select count(distinct a) from t2;
 count 
-------
     5
(1 row)

-- test index (need more data)
create table t3 ( a uniqueidentifier, b uniqueidentifier);
-- create inital distinct values
insert into t3 values (newid(), newid());
insert into t3 values (newid(), newid());
insert into t3 values (newid(), newid());
insert into t3 values (newid(), newid());
create index t3_a on t3 using btree (a);
create index t3_b on t3 using hash (b);
-- test truncate feature of uniqueidentifier_in
create table t4 ( a uniqueidentifier);
insert into t4 values ('6F9619FF-8B86-D011-B42D-00C04FC964FF');
insert into t4 values ('6F9619FF-8B86-D011-B42D-00C04FC964FFwrong'); -- characters exceeding are truncated
insert into t4 values ('{6F9619FF-8B86-D011-B42D-00C04FC964FF}'); -- with braces
insert into t4 values ('{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong'); -- error due to no matching brace
ERROR:  invalid input syntax for type uuid: "{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong"
LINE 1: insert into t4 values ('{6F9619FF-8B86-D011-B42D-00C04FC964F...
                               ^
insert into t4 values ('6F9619FF-8B86-D011-B42D-00C04FC964FF}'); -- single brace at the end are truncated
select * from t4;
                  a                   
--------------------------------------
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
(4 rows)

reset babelfishpg_tsql.sql_dialect;
SET ENABLE_SEQSCAN = OFF;
SET ENABLE_BITMAPSCAN = OFF;
SET SEARCH_PATH = sys, public;
select name, setting from pg_settings where name in ('enable_seqscan', 'enable_bitmapscan');
       name        | setting 
-------------------+---------
 enable_bitmapscan | off
 enable_seqscan    | off
(2 rows)

explain (costs off) select * from t3 where a = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'; -- test btree index
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Index Scan using t3_at386baf2ea94a757b06124ac7a4c87f41f on t3
   Index Cond: (a = 'A0EEBC99-9C0B-4EF8-BB6D-6BB9BD380A11'::uniqueidentifier)
(2 rows)

explain (costs off) select * from t3 where b = 'a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11'; -- test hash index
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Index Scan using t3_bt3e585137b3a7e6e454e6dffa0e011ffe7 on t3
   Index Cond: (b = 'A0EEBC99-9C0B-4EF8-BB6D-6BB9BD380A11'::uniqueidentifier)
(2 rows)

-- assignment cast, should have same behavior as normal insert
set babelfishpg_tsql.sql_dialect = "tsql";
create table t5 ( a uniqueidentifier);
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FF' as varchar(50)));
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FFwrong' as varchar(50))); -- characters exceeding are truncated
insert into t5 values (cast('{6F9619FF-8B86-D011-B42D-00C04FC964FF}' as varchar(50))); -- with braces
insert into t5 values (cast('{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong' as varchar(50))); -- error due to no matching brace
ERROR:  invalid input syntax for type uuid: "{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong"
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FF}' as varchar(50))); -- single brace at the end are truncated
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FF' as nvarchar(50)));
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FFwrong' as nvarchar(50))); -- characters exceeding are truncated
insert into t5 values (cast('{6F9619FF-8B86-D011-B42D-00C04FC964FF}' as nvarchar(50))); -- with braces
insert into t5 values (cast('{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong' as nvarchar(50))); -- error due to no matching brace
ERROR:  invalid input syntax for type uuid: "{6F9619FF-8B86-D011-B42D-00C04FC964FFwrong"
insert into t5 values (cast('6F9619FF-8B86-D011-B42D-00C04FC964FF}' as nvarchar(50))); -- single brace at the end are truncated
-- error cases, implicit cast not supported
select * from t5 where a = cast('6F9619FF-8B86-D011-B42D-00C04FC964FF' as varchar(50));
                  a                   
--------------------------------------
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
(8 rows)

select * from t5 where a = cast('6F9619FF-8B86-D011-B42D-00C04FC964FF' as nvarchar(50));
                  a                   
--------------------------------------
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
 6F9619FF-8B86-D011-B42D-00C04FC964FF
(8 rows)

reset babelfishpg_tsql.sql_dialect;
drop table t1;
drop table t2;
drop table t3;
drop table t4;
drop table t5;
